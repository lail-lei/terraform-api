name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "env/cte" ]
  workflow_dispatch:    

env:
  GAR_LOCATION: europe-west1
  SERVICE: fabric-samples-api
  REGION: europe-west1
  ARTIFACT_REPO: fso-api
  
jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    environment: cte
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Confirm start cmd
        run: echo "${{ vars.START_CMD }}"
      
      - name: Dump GitHub context, for debugging
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/${{vars.GCP_PROJECT_NUMBER}}/locations/global/workloadIdentityPools/gh-oidc-api-infra-2/providers/gh-oidc-api-infra-2'
          service_account: 'gh-oidc-infra-2@${{vars.GCP_PROJECT_ID}}.iam.gserviceaccount.com'
      
      - name: Show Output
        run: echo ${{ toJson(steps.auth.auth_token)  }}

      # Authenticate Docker to Google Cloud Artifact Registry
      # - name: Docker Auth
      #   id: docker-auth
      #   uses: 'docker/login-action@v2'
      #   with:
      #     username: 'oauth2accesstoken'
      #     password: '${{ steps.auth.outputs.access_token }}'
      #     registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      # # - name: debugging
      # #   run: echo "$PHRASE_API_KEY" \

      # - name: Build image
      #   run: |-
      #     docker build \
      #       --tag "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE }}" \
      #       --build-arg START_CMD="$START_CMD" \
      #       .
          
      # - name: Push image
      #   run: |-
      #     docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID}}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE }}"

      # # END - Docker auth and build

      # - name: Deploy to Cloud Run
      #   id: deploy
      #   uses: google-github-actions/deploy-cloudrun@v0
      #   with:
      #     service: ${{ env.SERVICE }}
      #     region: ${{ env.REGION }}
      #     # NOTE: If using a pre-built image, update the image name here
      #     image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE }}

      # # If required, use the Cloud Run url output in later steps
      # - name: Show Output
      #   run: echo ${{ steps.deploy.outputs.url }}