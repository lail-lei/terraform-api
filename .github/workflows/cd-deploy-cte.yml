name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "env/cte" ]
  workflow_dispatch:    

env:
  GAR_LOCATION: europe-west1
  SERVICE: fabric-samples-api
  REGION: europe-west1
  ARTIFACT_REPO: fso-api
  
jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    environment: cte
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Authenticate to Google Cloud'
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/${{vars.GCP_PROJECT_NUMBER}}/locations/global/workloadIdentityPools/gh-oidc-api-cicd-2/providers/gh-oidc-api-cicd-2'
          service_account: 'gh-oidc-api-cicd-2@${{vars.GCP_PROJECT_ID}}.iam.gserviceaccount.com'

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{vars.GCP_PROJECT_ID}}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build image
        run: |-
          docker build \
            --tag "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE }}" \
            --build-arg START_CMD="$START_CMD" \
            .
          
      - name: Push image
        run: |-
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID}}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}